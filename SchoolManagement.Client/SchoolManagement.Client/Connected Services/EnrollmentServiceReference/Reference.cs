//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SchoolManagement.Client.EnrollmentServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="EnrollmentServiceReference.IEnrollmentService")]
    public interface IEnrollmentService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnrollmentService/GetAllEnrollments", ReplyAction="http://tempuri.org/IEnrollmentService/GetAllEnrollmentsResponse")]
        SchoolManagement.Models.Enrollment[] GetAllEnrollments();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnrollmentService/GetAllEnrollments", ReplyAction="http://tempuri.org/IEnrollmentService/GetAllEnrollmentsResponse")]
        System.Threading.Tasks.Task<SchoolManagement.Models.Enrollment[]> GetAllEnrollmentsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnrollmentService/AddEnrollment", ReplyAction="http://tempuri.org/IEnrollmentService/AddEnrollmentResponse")]
        void AddEnrollment(SchoolManagement.Models.Enrollment enrollment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnrollmentService/AddEnrollment", ReplyAction="http://tempuri.org/IEnrollmentService/AddEnrollmentResponse")]
        System.Threading.Tasks.Task AddEnrollmentAsync(SchoolManagement.Models.Enrollment enrollment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnrollmentService/UpdateEnrollment", ReplyAction="http://tempuri.org/IEnrollmentService/UpdateEnrollmentResponse")]
        void UpdateEnrollment(SchoolManagement.Models.Enrollment enrollment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnrollmentService/UpdateEnrollment", ReplyAction="http://tempuri.org/IEnrollmentService/UpdateEnrollmentResponse")]
        System.Threading.Tasks.Task UpdateEnrollmentAsync(SchoolManagement.Models.Enrollment enrollment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnrollmentService/DeleteEnrollment", ReplyAction="http://tempuri.org/IEnrollmentService/DeleteEnrollmentResponse")]
        void DeleteEnrollment(int enrollmentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnrollmentService/DeleteEnrollment", ReplyAction="http://tempuri.org/IEnrollmentService/DeleteEnrollmentResponse")]
        System.Threading.Tasks.Task DeleteEnrollmentAsync(int enrollmentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnrollmentService/GetEnrollmentById", ReplyAction="http://tempuri.org/IEnrollmentService/GetEnrollmentByIdResponse")]
        SchoolManagement.Models.Enrollment GetEnrollmentById(int enrollmentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnrollmentService/GetEnrollmentById", ReplyAction="http://tempuri.org/IEnrollmentService/GetEnrollmentByIdResponse")]
        System.Threading.Tasks.Task<SchoolManagement.Models.Enrollment> GetEnrollmentByIdAsync(int enrollmentId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IEnrollmentServiceChannel : SchoolManagement.Client.EnrollmentServiceReference.IEnrollmentService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EnrollmentServiceClient : System.ServiceModel.ClientBase<SchoolManagement.Client.EnrollmentServiceReference.IEnrollmentService>, SchoolManagement.Client.EnrollmentServiceReference.IEnrollmentService {
        
        public EnrollmentServiceClient() {
        }
        
        public EnrollmentServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public EnrollmentServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EnrollmentServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EnrollmentServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public SchoolManagement.Models.Enrollment[] GetAllEnrollments() {
            return base.Channel.GetAllEnrollments();
        }
        
        public System.Threading.Tasks.Task<SchoolManagement.Models.Enrollment[]> GetAllEnrollmentsAsync() {
            return base.Channel.GetAllEnrollmentsAsync();
        }
        
        public void AddEnrollment(SchoolManagement.Models.Enrollment enrollment) {
            base.Channel.AddEnrollment(enrollment);
        }
        
        public System.Threading.Tasks.Task AddEnrollmentAsync(SchoolManagement.Models.Enrollment enrollment) {
            return base.Channel.AddEnrollmentAsync(enrollment);
        }
        
        public void UpdateEnrollment(SchoolManagement.Models.Enrollment enrollment) {
            base.Channel.UpdateEnrollment(enrollment);
        }
        
        public System.Threading.Tasks.Task UpdateEnrollmentAsync(SchoolManagement.Models.Enrollment enrollment) {
            return base.Channel.UpdateEnrollmentAsync(enrollment);
        }
        
        public void DeleteEnrollment(int enrollmentId) {
            base.Channel.DeleteEnrollment(enrollmentId);
        }
        
        public System.Threading.Tasks.Task DeleteEnrollmentAsync(int enrollmentId) {
            return base.Channel.DeleteEnrollmentAsync(enrollmentId);
        }
        
        public SchoolManagement.Models.Enrollment GetEnrollmentById(int enrollmentId) {
            return base.Channel.GetEnrollmentById(enrollmentId);
        }
        
        public System.Threading.Tasks.Task<SchoolManagement.Models.Enrollment> GetEnrollmentByIdAsync(int enrollmentId) {
            return base.Channel.GetEnrollmentByIdAsync(enrollmentId);
        }
    }
}

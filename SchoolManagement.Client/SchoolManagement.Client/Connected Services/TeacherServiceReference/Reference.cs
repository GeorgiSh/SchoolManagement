//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SchoolManagement.Client.TeacherServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="TeacherServiceReference.ITeacherService")]
    public interface ITeacherService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITeacherService/AddTeacher", ReplyAction="http://tempuri.org/ITeacherService/AddTeacherResponse")]
        void AddTeacher(SchoolManagement.Models.Teacher teacher);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITeacherService/AddTeacher", ReplyAction="http://tempuri.org/ITeacherService/AddTeacherResponse")]
        System.Threading.Tasks.Task AddTeacherAsync(SchoolManagement.Models.Teacher teacher);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITeacherService/GetTeacher", ReplyAction="http://tempuri.org/ITeacherService/GetTeacherResponse")]
        SchoolManagement.Models.Teacher GetTeacher(int teacherId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITeacherService/GetTeacher", ReplyAction="http://tempuri.org/ITeacherService/GetTeacherResponse")]
        System.Threading.Tasks.Task<SchoolManagement.Models.Teacher> GetTeacherAsync(int teacherId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITeacherService/GetAllTeachers", ReplyAction="http://tempuri.org/ITeacherService/GetAllTeachersResponse")]
        SchoolManagement.Models.Teacher[] GetAllTeachers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITeacherService/GetAllTeachers", ReplyAction="http://tempuri.org/ITeacherService/GetAllTeachersResponse")]
        System.Threading.Tasks.Task<SchoolManagement.Models.Teacher[]> GetAllTeachersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITeacherService/UpdateTeacher", ReplyAction="http://tempuri.org/ITeacherService/UpdateTeacherResponse")]
        void UpdateTeacher(SchoolManagement.Models.Teacher teacher);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITeacherService/UpdateTeacher", ReplyAction="http://tempuri.org/ITeacherService/UpdateTeacherResponse")]
        System.Threading.Tasks.Task UpdateTeacherAsync(SchoolManagement.Models.Teacher teacher);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITeacherService/DeleteTeacher", ReplyAction="http://tempuri.org/ITeacherService/DeleteTeacherResponse")]
        void DeleteTeacher(int teacherId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITeacherService/DeleteTeacher", ReplyAction="http://tempuri.org/ITeacherService/DeleteTeacherResponse")]
        System.Threading.Tasks.Task DeleteTeacherAsync(int teacherId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ITeacherServiceChannel : SchoolManagement.Client.TeacherServiceReference.ITeacherService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TeacherServiceClient : System.ServiceModel.ClientBase<SchoolManagement.Client.TeacherServiceReference.ITeacherService>, SchoolManagement.Client.TeacherServiceReference.ITeacherService {
        
        public TeacherServiceClient() {
        }
        
        public TeacherServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public TeacherServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TeacherServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TeacherServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void AddTeacher(SchoolManagement.Models.Teacher teacher) {
            base.Channel.AddTeacher(teacher);
        }
        
        public System.Threading.Tasks.Task AddTeacherAsync(SchoolManagement.Models.Teacher teacher) {
            return base.Channel.AddTeacherAsync(teacher);
        }
        
        public SchoolManagement.Models.Teacher GetTeacher(int teacherId) {
            return base.Channel.GetTeacher(teacherId);
        }
        
        public System.Threading.Tasks.Task<SchoolManagement.Models.Teacher> GetTeacherAsync(int teacherId) {
            return base.Channel.GetTeacherAsync(teacherId);
        }
        
        public SchoolManagement.Models.Teacher[] GetAllTeachers() {
            return base.Channel.GetAllTeachers();
        }
        
        public System.Threading.Tasks.Task<SchoolManagement.Models.Teacher[]> GetAllTeachersAsync() {
            return base.Channel.GetAllTeachersAsync();
        }
        
        public void UpdateTeacher(SchoolManagement.Models.Teacher teacher) {
            base.Channel.UpdateTeacher(teacher);
        }
        
        public System.Threading.Tasks.Task UpdateTeacherAsync(SchoolManagement.Models.Teacher teacher) {
            return base.Channel.UpdateTeacherAsync(teacher);
        }
        
        public void DeleteTeacher(int teacherId) {
            base.Channel.DeleteTeacher(teacherId);
        }
        
        public System.Threading.Tasks.Task DeleteTeacherAsync(int teacherId) {
            return base.Channel.DeleteTeacherAsync(teacherId);
        }
    }
}
